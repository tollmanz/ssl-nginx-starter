# nginx.conf
#
# This is *the* config file for nginx in the virtual machine, and it
# should probably not be altered often as most things are already
# setup. If you do find yourself altering something here, you may want
# to consider discussing it at the repo so we can share in your findings

# User to run nginx as
user    www-data;

# Default to number of CPU cores available
worker_processes    auto;

# Increase the number of file handlers available
worker_rlimit_nofile    20000;

# Default error log file
error_log    /var/log/nginx/error.log;

# Nginx process identifier
pid    /var/run/nginx.pid;

# The EventsModule controls how Nginx deals with connections
events {
	# max clients = worker_processes (CPUs) * worker_connections
	worker_connections    20000;

	# Accept as many connections as possible, after nginx gets notification about a new connection.
	multi_accept    on;
}

# The HttpCoreModule controls core features of Nginx's HTTP processing
http {

	# Define MIME types for files
	include     /etc/nginx/mime.types;

	# Default log file
	access_log     /var/log/nginx/access.log;

	# Turn sendfile off in a virtual machine because of issues
	sendfile    off;

	# Don't send out partial TCP frames
	tcp_nopush    on;

	# Hide nginx version information
	server_tokens    off;

	# Enable Gzip compression
	gzip    on;

	# Compression level (1-9)
	gzip_comp_level    5;

	# Don't compress anything under 256 bytes
	gzip_min_length    256;

	# Compress output of these MIME-types
	gzip_types
		application/atom+xml
		application/javascript
		application/json
		application/rss+xml
		application/vnd.ms-fontobject
		application/x-font-ttf
		application/x-javascript
		application/x-web-app-manifest+json
		application/xhtml+xml
		application/xml
		font/opentype
		image/svg+xml
		image/x-icon
		text/css
		text/plain
		text/x-component;

	# Disable gzip for bad browsers
	gzip_disable    "MSIE [1-6]\.(?!.*SV1)";

	# If the requested body size is more than the buffer size, the entire body is
	# written to a temporary file. Default is 8k or 16k depending on the platform.
	client_body_buffer_size    16k;

	# If a request line or header field does not fit into this buffer, then larger
	# buffers via large_client_header_buffers are allocated
	client_header_buffer_size    1k;

	# Max size of a body to allow. This affects uploads, but can be overwritten at
	# the individual site level
	client_max_body_size    50M;

	# The maximum number and size of large headers to accept from a client
	large_client_header_buffers    4 16k;

	# Closed timedout connections and reclaim the connection
	reset_timedout_connection    on;

	# Reduce timeouts to reclaim connections more quickly
	client_header_timeout    20s;
	client_body_timeout      20s;
	send_timeout             20s;
	keepalive_timeout        20s;

	# Set the Content Type header so the browser does not infer this from the page. This
	# allows the browser to know this value instead of having to decide it
	default_type    text/html;
	charset         UTF-8;

	# Cache files that are opened frequently within the time specified
	open_file_cache             max=10000 inactive=20s;
	open_file_cache_valid       2m;
	open_file_cache_min_uses    2;
	open_file_cache_errors      on;

	# Per https://www.owasp.org/index.php/List_of_useful_HTTP_headers
	#
	# Prevents IE and Google Chrome from MIME-sniffing a response away from the declared
	# content-type.
	add_header    X-Content-Type-Options nosniff;

	# Enable the XSS filter built into modern web browsers. This will re-enable
	# the XSS filter if a user has disabled it.
	add_header    X-XSS-Protection "1; mode=block";

	# Ensure that content served from this server is not embedded in other pages
	# unless they are of the same origin.
	add_header    X-Frame-Options SAMEORIGIN;

	include    /etc/nginx/conf.d/*.conf;
	include    /etc/nginx/sites-enabled/*;
}